-- Creación de la tabla de auditoría para la tabla INICIDENTE
CREATE TABLE AUDITORIA_INCIDENTE (
    FECHAYHORA TIMESTAMP,
    INCIDENTE_ID CHAR(10),
    OPERACION VARCHAR2(20),
    COLUMNA_MODIFICADA VARCHAR2(50),
    VALOR_ANTERIOR VARCHAR2(255),
    VALOR_NUEVO VARCHAR2(255)
);


-- Este trigger cumple con los siguientes requisitos:
--  Evita modificaciones de la descripción de un incidente si el estado es "Cerrado".
--  Audita todas las operaciones (inserción, actualización y eliminación) en la tabla INCIDENTE.
--  Guarda detalles de las columnas modificadas, incluyendo los valores anteriores y nuevos.

CREATE OR REPLACE TRIGGER trg_auditoria_incidente
BEFORE INSERT OR DELETE OR UPDATE ON INCIDENTE
FOR EACH ROW
DECLARE
    v_operacion VARCHAR2(20);
BEGIN
    IF INSERTING THEN
        v_operacion := 'INSERTAR';
        INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
        VALUES (SYSTIMESTAMP, :NEW.INCIDENTE_ID, v_operacion, 'N/A', 'N/A', 'Registro insertado');

    ELSIF DELETING THEN
        v_operacion := 'BORRAR';
        INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
        VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'N/A', 'Registro borrado', 'N/A');

    ELSIF UPDATING THEN
        v_operacion := 'ACTUALIZAR';

        -- Prevenir modificaciones de la descripción si el incidente está cerrado
        IF :OLD.ESTADO = 'Cerrado' AND :NEW.DESCRIPCION != :OLD.DESCRIPCION THEN
            RAISE_APPLICATION_ERROR(-20001, 'No se puede modificar la descripción de un incidente cerrado.');
        END IF;

        -- Auditar las columnas modificadas
        IF :NEW.ACTIVO_ID != :OLD.ACTIVO_ID THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'ACTIVO_ID', :OLD.ACTIVO_ID, :NEW.ACTIVO_ID);
        END IF;

        IF :NEW.USUARIO_ID != :OLD.USUARIO_ID THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'USUARIO_ID', TO_CHAR(:OLD.USUARIO_ID), TO_CHAR(:NEW.USUARIO_ID));
        END IF;

        IF :NEW.DESCRIPCION != :OLD.DESCRIPCION THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'DESCRIPCION', :OLD.DESCRIPCION, :NEW.DESCRIPCION);
        END IF;

        IF :NEW.FECHA != :OLD.FECHA THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'FECHA', TO_CHAR(:OLD.FECHA), TO_CHAR(:NEW.FECHA));
        END IF;

        IF :NEW.GRAVEDAD != :OLD.GRAVEDAD THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'GRAVEDAD', :OLD.GRAVEDAD, :NEW.GRAVEDAD);
        END IF;

        IF :NEW.ESTADO != :OLD.ESTADO THEN
            INSERT INTO AUDITORIA_INCIDENTE (FECHAYHORA, INCIDENTE_ID, OPERACION, COLUMNA_MODIFICADA, VALOR_ANTERIOR, VALOR_NUEVO)
            VALUES (SYSTIMESTAMP, :OLD.INCIDENTE_ID, v_operacion, 'ESTADO', :OLD.ESTADO, :NEW.ESTADO);
        END IF;
    END IF;
END;
/
